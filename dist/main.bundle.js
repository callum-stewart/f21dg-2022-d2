/*! For license information please see main.bundle.js.LICENSE.txt */
(()=>{var e={907:e=>{"use strict";e.exports=function(e){for(var t=new Array(e),n=0;n<e;++n)t[n]=n;return t}},738:e=>{function t(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(t(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&t(e.slice(0,0))}(e)||!!e._isBuffer)}},861:(e,t,n)=>{var o=n(907),i=n(738),a="undefined"!=typeof Float64Array;function r(e,t){return e[0]-t[0]}function s(){var e,t=this.stride,n=new Array(t.length);for(e=0;e<n.length;++e)n[e]=[Math.abs(t[e]),e];n.sort(r);var o=new Array(n.length);for(e=0;e<o.length;++e)o[e]=n[e][1];return o}function l(e,t){var n=["View",t,"d",e].join("");t<0&&(n="View_Nil"+e);var i="generic"===e;if(-1===t){var a="function "+n+"(a){this.data=a;};var proto="+n+".prototype;proto.dtype='"+e+"';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new "+n+"(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_"+n+"(a){return new "+n+"(a);}";return new Function(a)()}if(0===t)return a="function "+n+"(a,d) {this.data = a;this.offset = d};var proto="+n+".prototype;proto.dtype='"+e+"';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function "+n+"_copy() {return new "+n+"(this.data,this.offset)};proto.pick=function "+n+"_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function "+n+"_get(){return "+(i?"this.data.get(this.offset)":"this.data[this.offset]")+"};proto.set=function "+n+"_set(v){return "+(i?"this.data.set(this.offset,v)":"this.data[this.offset]=v")+"};return function construct_"+n+"(a,b,c,d){return new "+n+"(a,d)}",new Function("TrivialArray",a)(c[e][0]);a=["'use strict'"];var r=o(t),l=r.map((function(e){return"i"+e})),d="this.offset+"+r.map((function(e){return"this.stride["+e+"]*i"+e})).join("+"),u=r.map((function(e){return"b"+e})).join(","),p=r.map((function(e){return"c"+e})).join(",");a.push("function "+n+"(a,"+u+","+p+",d){this.data=a","this.shape=["+u+"]","this.stride=["+p+"]","this.offset=d|0}","var proto="+n+".prototype","proto.dtype='"+e+"'","proto.dimension="+t),a.push("Object.defineProperty(proto,'size',{get:function "+n+"_size(){return "+r.map((function(e){return"this.shape["+e+"]"})).join("*"),"}})"),1===t?a.push("proto.order=[0]"):(a.push("Object.defineProperty(proto,'order',{get:"),t<4?(a.push("function "+n+"_order(){"),2===t?a.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"):3===t&&a.push("var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})")):a.push("ORDER})")),a.push("proto.set=function "+n+"_set("+l.join(",")+",v){"),i?a.push("return this.data.set("+d+",v)}"):a.push("return this.data["+d+"]=v}"),a.push("proto.get=function "+n+"_get("+l.join(",")+"){"),i?a.push("return this.data.get("+d+")}"):a.push("return this.data["+d+"]}"),a.push("proto.index=function "+n+"_index(",l.join(),"){return "+d+"}"),a.push("proto.hi=function "+n+"_hi("+l.join(",")+"){return new "+n+"(this.data,"+r.map((function(e){return["(typeof i",e,"!=='number'||i",e,"<0)?this.shape[",e,"]:i",e,"|0"].join("")})).join(",")+","+r.map((function(e){return"this.stride["+e+"]"})).join(",")+",this.offset)}");var h=r.map((function(e){return"a"+e+"=this.shape["+e+"]"})),f=r.map((function(e){return"c"+e+"=this.stride["+e+"]"}));a.push("proto.lo=function "+n+"_lo("+l.join(",")+"){var b=this.offset,d=0,"+h.join(",")+","+f.join(","));for(var m=0;m<t;++m)a.push("if(typeof i"+m+"==='number'&&i"+m+">=0){d=i"+m+"|0;b+=c"+m+"*d;a"+m+"-=d}");for(a.push("return new "+n+"(this.data,"+r.map((function(e){return"a"+e})).join(",")+","+r.map((function(e){return"c"+e})).join(",")+",b)}"),a.push("proto.step=function "+n+"_step("+l.join(",")+"){var "+r.map((function(e){return"a"+e+"=this.shape["+e+"]"})).join(",")+","+r.map((function(e){return"b"+e+"=this.stride["+e+"]"})).join(",")+",c=this.offset,d=0,ceil=Math.ceil"),m=0;m<t;++m)a.push("if(typeof i"+m+"==='number'){d=i"+m+"|0;if(d<0){c+=b"+m+"*(a"+m+"-1);a"+m+"=ceil(-a"+m+"/d)}else{a"+m+"=ceil(a"+m+"/d)}b"+m+"*=d}");a.push("return new "+n+"(this.data,"+r.map((function(e){return"a"+e})).join(",")+","+r.map((function(e){return"b"+e})).join(",")+",c)}");var g=new Array(t),y=new Array(t);for(m=0;m<t;++m)g[m]="a[i"+m+"]",y[m]="b[i"+m+"]";for(a.push("proto.transpose=function "+n+"_transpose("+l+"){"+l.map((function(e,t){return e+"=("+e+"===undefined?"+t+":"+e+"|0)"})).join(";"),"var a=this.shape,b=this.stride;return new "+n+"(this.data,"+g.join(",")+","+y.join(",")+",this.offset)}"),a.push("proto.pick=function "+n+"_pick("+l+"){var a=[],b=[],c=this.offset"),m=0;m<t;++m)a.push("if(typeof i"+m+"==='number'&&i"+m+">=0){c=(c+this.stride["+m+"]*i"+m+")|0}else{a.push(this.shape["+m+"]);b.push(this.stride["+m+"])}");return a.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),a.push("return function construct_"+n+"(data,shape,stride,offset){return new "+n+"(data,"+r.map((function(e){return"shape["+e+"]"})).join(",")+","+r.map((function(e){return"stride["+e+"]"})).join(",")+",offset)}"),new Function("CTOR_LIST","ORDER",a.join("\n"))(c[e],s)}var c={float32:[],float64:[],int8:[],int16:[],int32:[],uint8:[],uint16:[],uint32:[],array:[],uint8_clamped:[],bigint64:[],biguint64:[],buffer:[],generic:[]};e.exports=function(e,t,n,o){if(void 0===e)return(0,c.array[0])([]);"number"==typeof e&&(e=[e]),void 0===t&&(t=[e.length]);var r=t.length;if(void 0===n){n=new Array(r);for(var s=r-1,d=1;s>=0;--s)n[s]=d,d*=t[s]}if(void 0===o)for(o=0,s=0;s<r;++s)n[s]<0&&(o-=(t[s]-1)*n[s]);for(var u=function(e){if(i(e))return"buffer";if(a)switch(Object.prototype.toString.call(e)){case"[object Float64Array]":return"float64";case"[object Float32Array]":return"float32";case"[object Int8Array]":return"int8";case"[object Int16Array]":return"int16";case"[object Int32Array]":return"int32";case"[object Uint8Array]":return"uint8";case"[object Uint16Array]":return"uint16";case"[object Uint32Array]":return"uint32";case"[object Uint8ClampedArray]":return"uint8_clamped";case"[object BigInt64Array]":return"bigint64";case"[object BigUint64Array]":return"biguint64"}return Array.isArray(e)?"array":"generic"}(e),p=c[u];p.length<=r+1;)p.push(l(u,p.length-1));return(0,p[r+1])(e,t,n,o)}},892:(e,t)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.checkIfValid=void 0,t.checkIfValid=function(e,t){var o=t.separator;if("string"!=typeof e)throw new Error("data has to be typeof: ".concat(n("")," but got typeof: ").concat(n(e)));if(!e.includes(o))throw new Error("data does not include separator: ".concat(o))}},701:(e,t,n)=>{"use strict";n(892),n(42),n(914)},42:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertCSVToArrayOfArrays=void 0;var o=n(991);t.convertCSVToArrayOfArrays=function(e,t){var n=t.header,i=t.separator,a=[],r=e.split(/(?!\B"[^"]*)\n(?![^"]*"\B)/g);return r.forEach((function(e,t){var s=e.split(i),l=[];r.length-1!==t&&(!n&&0!==t||n)&&(s.forEach((function(e){var t=(0,o.convertStringToNumber)(e),n=Number.isNaN(t)?e:t;l.push(n)})),a.push(l))})),a}},914:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertCSVToArrayOfObjects=void 0;var o=n(991);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}t.convertCSVToArrayOfObjects=function(e,t){var n,a,r=t.header,s=t.separator,l=e.split(/(?!\B"[^"]*)\n(?![^"]*"\B)/g),c=[],d=[];return l.forEach((function(e,t){0===t?(n=e.split(s),r&&c.push(n),n.forEach((function(e){a=Object.assign({},a,i({},e,void 0))}))):l.length-1!==t&&(e.split(s).forEach((function(e,t){var r=(0,o.convertStringToNumber)(e),s=Number.isNaN(r)?e:r;a=Object.assign({},a,i({},n[t],s))})),d.push(a))})),c.push.apply(c,d),c}},505:(e,t)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.checkIfValid=void 0,t.checkIfValid=function(e){if("string"!=typeof e)throw new Error("value has to be typeof: 'string' but got typeof: '".concat(n(e),"'"))}},991:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.convertStringToNumber=void 0;var o=n(505),i=function(e){if((0,o.checkIfValid)(e),Number.isNaN(Number(e)))return NaN;var t=parseFloat(e);return t%1==0?parseInt(e,10):t};t.convertStringToNumber=i;var a=i;t.default=a}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,n),a.exports}(()=>{"use strict";const e=(e,t)=>{const n=new URL(window.location);n.searchParams.set(e,t),window.history.pushState({},"",n)},t=e=>{const t={};for(const[i,a]of e){var n=+i.split("-")[0];if(n){var o=i.split("-")[1];t.signals||(t.signals=[]),t.signals[n-1]||(t.signals[n-1]={}),t.signals[n-1][o]=a}else t[i]=a}return t},o=e=>{try{const t=document.querySelector(".main-chart-holder");if(e){const e='\n  \x3c!--Chart Selection--\x3e\n           <div class="col-md-2 chart-selection">\n            <div\n                style="\n                  width: 100%;\n                  height: 175px;\n                  text-align: center;\n                " class="placeholderText m-2"\n              >\n                <div class="d-flex justify-content-center loading-spinner">\n                  <div class="spinner-border" role="status">\n                  </div>\n                </div>\n              </div>\n              <div\n                style="\n                  width: 100%;\n                  height: 175px;\n                  text-align: center;\n                "\n                class="placeholderText m-2"\n              >\n              <div class="d-flex justify-content-center loading-spinner">\n                <div class="spinner-border" role="status">\n                </div>\n              </div>\n              </div>\n              <div\n                style="\n                  width: 100%;\n                  height: 175px;\n                  text-align: center;\n                " class="placeholderText m-2"\n              >\n              <div class="d-flex justify-content-center loading-spinner">\n                <div class="spinner-border" role="status">\n                </div>\n              </div>\n              </div>\n          </div>\n          <div class="col-md-10">\n              <div class="placeholderText main-chart p-2 m-2" style="\n              width: 100%;\n              height: 550px;\n              text-align: center;\n            " >\n                <div class="d-flex justify-content-center loading-spinner">\n                  <div class="spinner-border" role="status">\n                  </div>\n                </div>\n              </div>\n          </div>\n  ';t.innerHTML=e}else t.innerHTML=""}catch(e){console.error("graphs: displayLoadingGraphs - "+e)}},i=()=>{try{document.querySelector("#reset-btn").classList.remove("disabled")}catch(e){console.error("reset: allowResetSignal - "+e)}};n(701),n(861);const a=["csv"],r="CSV_DATA_FOR_F21DG";function s(){console.log("Starting to parse file...");var e=document.getElementById("csvFileInput").files[0];if(console.log("fileIO.js::parseFile, csvFileInput is: "+e),null==e)return;if(!function(e){try{for(const t of a)if(e.split(".")[1].toLowerCase()==t)return console.log("filetype supported!"),!0;return console.warn("filetype was not supported"),!1}catch(e){return console.error("Exception encountered when trying to identify file type "+e),!1}}(e.name))return void alert("Filetype is not supported. Please try again.");(function(e){return null!=function(e){return sessionStorage.getItem(e)}(e)})(r)&&(console.log(`Clearing value assigned to ${r} in sessionStorage`),r,sessionStorage.removeItem("CSV_DATA_FOR_F21DG"));const t=new FileReader;t.addEventListener("loadstart",l("Start Loading")),t.addEventListener("load",l("Loaded")),t.addEventListener("loadend",d),t.addEventListener("progress",c),t.addEventListener("error",u),t.addEventListener("abort",l("Interrupted")),t.readAsText(e)}function l(e){document.getElementById("status").innerHTML=e,console.log(e)}function c(e){e.target,e.total}function d(e){const t=function(e,t=","){return e.slice(0,e.indexOf("\n")).split(t),e.slice(e.indexOf("\n")+1).split("\n").map((e=>[parseFloat(e.split(t)[0]),parseFloat(e.split(t)[1])])).filter((e=>!isNaN(e[0])&&!isNaN(e[1])))}(e.target.result);var n;console.log(t),l("Finished Loading!"),n=JSON.stringify(t),sessionStorage.setItem("CSV_DATA_FOR_F21DG",n)}function u(e){l("Error: "+e.target.error.name)}function p(e,t,n){this.margin=50,this.width=null==t?400:t,this.height=null==n?400:n,this.elementWidth=null,this.elementHeight=null,this.data=null,this.x=null,this.y=null,this.z=d3.scaleSequential(d3.interpolateViridis),this.div=d3.select(e),this.canvas=this.div.append("canvas"),this.svg=this.div.append("svg"),this.svgGroup=this.svg.append("g"),this.rectangle=this.svgGroup.append("rect"),this.xAxis=null,this.yAxis=null,this.xAxisGroup=this.svgGroup.append("g"),this.yAxisGroup=this.svgGroup.append("g"),this.yAxisLabel=this.svgGroup.append("text"),this.xAxisLabel=this.svgGroup.append("text"),this.tooltipGroup=this.svgGroup.append("g")}function h(e){return d3.format(".3s")(e)+"Hz"}const f=new Worker("../public/webworker.js");let m=null;var g=function(e,t){e.innerHTML=t,Array.from(e.querySelectorAll("script")).forEach((e=>{const t=document.createElement("script");Array.from(e.attributes).forEach((e=>t.setAttribute(e.name,e.value))),t.appendChild(document.createTextNode(e.innerHTML)),e.parentNode.replaceChild(t,e)}))};function y(e){m=new Promise(((e,t)=>{let n=JSON.parse(sessionStorage.getItem("settings"));if(null!==n&&n!=={}||t("operation not specified, sessionStorage for settings is empty"),"upload"===n.dataMethod){const e=JSON.parse(sessionStorage.getItem("CSV_DATA_FOR_F21DG"));null===e?t("dataMethod specified but no data uploaded"):n.signalData=e}f.onmessage=function(n){"pyodide_not_available"===n.data?t("Pyodide not available for calculations. Try refreshing page or using a different browser."):e(n.data)},f.postMessage(n)})).then((e=>function(e,t){const n=JSON.parse(e);if(n.hasOwnProperty("stft_data")){let e=document.getElementById("chart-location"),t=document.getElementById("before-chart-location");e.className="",g(e,""),g(t,n.before_html),function(e,t){e.data=t,function(e,t){let n=e.width-5,o=e.height-15,i=n-2*e.margin,a=o-2*e.margin;e.elementWidth=i,e.elementHeight=a,e.svg.attr("width",n).attr("height",o).style("position","absolute"),e.svgGroup.attr("transform","translate("+e.margin+","+e.margin+")"),e.x=d3.scaleLinear().range([0,i]).interpolate(d3.interpolateRound),e.y=d3.scaleLinear().range([a,0]).interpolate(d3.interpolateRound),e.pixelHeight=d3.scaleLinear().range([0,100]).interpolate(d3.interpolateRound),e.pixelHeight.domain(e.data.freqRange),e.y.domain(e.data.freqRange),e.x.domain(e.data.timeRange),e.z.domain(e.data.zRange),e.canvas.attr("width",i).attr("height",a).style("padding",e.margin+"px").style("position","absolute"),e.rectangle.attr("width",i).attr("height",a).style("fill","#fff").style("opacity",0),e.xAxis=d3.axisBottom(e.x),e.xAxisGroup.attr("class","axis x-axis").call(e.xAxis).attr("transform","translate(0, "+e.elementHeight+")"),e.yAxis=d3.axisLeft(e.y).ticks(16).tickFormat(h),e.yAxisGroup.attr("class","axis y-axis").call(e.yAxis),e.yAxisLabel.attr("class","axis y-axis").attr("text-anchor","middle").attr("transform","translate(2,-10)").text("Frequency"),e.xAxisLabel.attr("class","axis x-axis").attr("text-anchor","middle").attr("transform","translate("+i/2+","+(a+e.margin)+")").text("Time"),function(e){var t=e.canvas.node().getContext("2d");for(let n=0;n<e.data.values.length;n++)for(let o=0;o<e.data.values[n].values.length;o++)t.setTransform(1,0,0,-1,0,e.elementHeight),t.fillStyle=e.z(e.data.values[n].values[o].z),t.fillRect(e.x(e.data.values[n].time),e.elementHeight-e.y(e.data.values[n].values[o].freq),e.x(e.data.timeStep),e.y(e.data.values[n].values[o].freq+e.data.freqStep)-e.y(e.data.values[n].values[o].freq))}(e)}(e)}(new p("#chart-location",900,400),n.stft_data)}else if("object"==typeof n&&null!==n){let e=document.getElementById("chart-location"),t=document.getElementById("before-chart-location");e.className="row align-items-start justify-content-center main-chart-holder",g(e,n.output_html),g(t,n.before_html)}}(e)))}const b=JSON.parse('{"EMD":{"description":"Hibert-Huang Transform (HHT) first utilises empirical mode decomposition (EMD) in order to break a complex waveform into IMFs representing simple oscillatory modes through a process called sifting. \\nThe amplitude and frequency of an IMF may vary with time, and must satisfy both of these rules: \\n1. The total number of extrema and the number of zero crossings must differ by at most \\n2. The mean envelope value (defined by a spline described by the local maxima and the local minima) must be nearly zero","procons":{"pros":"EMD is a self-adaptive signal processing method. \\nThe IMFs are determined by the signal itself, and are representative of the natural oscillatory mode embedded in the signal. \\nThus EMD works on the characteristic time local time scale, rather than with predetermined windows.","cons":"1. EMD suffers from end effects \\n 2. The IMFs may not be orthogonal \\n3. Mode mixing sometimes occurs between IMFs, where a single IMF includes oscillatory modes that are drastically different or a component of a different IMF all together."}},"STFT":{"description":"The procedure for STFT is to divide a long time signal equally into shorter length segments, and then compute a DFT on each of these segments.\\n In order to smooth out any unusual artefacts at the boundary of segments, window functions such as a Hann window may be used, which attenuates signals located near boundaries using a cosine window. \\nWith the Fourier spectra of each shorter segment, we can plot the changing spectra against time using a type of plot known as a spectrogram.","procons":{"pros":"STFT is frequency-shift equivariant - same absolute shift has same effect on representation regardless of original frequency \\n This allows it to track linear frequency modulation with a fixed rate over the entire time-frequency plane, so we can tune the time-frequency tradeoff until we\'ve mapped it perfectly. Shift equivariance is also useful for representative linearity depending on application","cons":"There is a significant limitation to building on top of Fourier transforms due to an uncertainty limit called the Gabor limit. \\nBy making the time resolution smaller (i.e., by dividing the main signal into smaller windows) we become more certain of when frequencies change, but we lose frequency resolution (the ability to see frequency components close together). \\nBy making the time resolutions larger, we lose time resolution (the ability to know precisely when a frequency changes), but we get better frequency resolution."}}}'),v=document.querySelector("#emd-btn"),S=document.querySelector("#stft-btn"),w=document.querySelector("#upload-btn"),q=document.querySelector("#config-btn"),x=document.querySelector("#reset-btn"),L=document.querySelector("#bookmark-btn"),k=new class{constructor(e){this.data=e}populatingInfoPanel(e){try{const t=this.data[e];switch(document.querySelector("#method-name").innerHTML=e,document.querySelector("#method-info").innerHTML=t.description,document.querySelector("#method-pros-heading").style.display="block",document.querySelector("#method-cons-heading").style.display="block",document.querySelector("#method-pros").innerHTML=t.procons.pros,document.querySelector("#method-cons").innerHTML=t.procons.cons,e){case"EMD":document.querySelector("#emd-btn").classList.add("active-dark"),document.querySelector("#stft-btn").classList.remove("active-dark");break;case"STFT":document.querySelector("#stft-btn").classList.add("active-dark"),document.querySelector("#emd-btn").classList.remove("active-dark");break;default:console.log("populatingInfoPanel: No method selected")}}catch(e){console.error("infoPanel: populatingInfoPanel - "+e)}}displayInfoPanel(e){try{const t=["name","info","pros-heading","cons-heading","pros","cons"];e?t.forEach((e=>{document.querySelector(`#method-${e}`).classList.remove("hide-info-panel"),document.querySelector("#infoPanel").classList.remove("hide-info-panel")})):(t.forEach((e=>{document.querySelector(`#method-${e}`).classList.add("hide-info-panel")})),document.querySelector("#infoPanel").classList.add("hide-info-panel"))}catch(e){console.error("infoPanel: displayInfoPanel - "+e)}}}(b),T=new class{showUploadTab=()=>{try{const e=document.querySelector(".signal-section");document.querySelector("#upload-btn").classList.add("active"),document.querySelector("#config-btn").classList.remove("active");const t='\n                <div class="col-md-12 upload-signal p-4">\n                    <h4>Signal Upload \n                      <a onclick="introJs().goToStepNumber(7).start()"><i class="bi bi-question-circle"></i></a>\n                    </h4>\n                    <p>Upload your signal file and select your chosen decomposition method to produce your graphs.\n                    </p>\n                    <form class="form-example g-3">\n                        <div class="mb-3 col-md-6">\n                            <label for="signalFile" class="form-label">Browse for a signal file (.csv)</label>\n                            <input class="form-control" type="file" id="csvFileInput" accept=".csv" data-title="Upload your file" data-intro="Add your time series file in the form of an .csv file by browsing your computer’s files." data-step="7">\n                        </div>\n                        <div id="status" data-title="Confirm upload..." data-intro="Once you receive a confirmation message here your file has completed uploading." data-step="8"></div>\n                    </form>\n                </div>\n                <div class="mb-3 col-md-12 upload-bottom-bar p-2">\n                    <button id="generate-upload-graph" type="button" class="btn btn-dark float-end" data-title="Have a look!" data-intro="Click on generate graphs to start the decomposition!" data-step="9">\n                        Generate graphs\n                    </button>\n                </div>\n                ';e.innerHTML=t,document.querySelector("#csvFileInput").addEventListener("change",(()=>{s()})),document.querySelector("#generate-upload-graph").addEventListener("click",(()=>{o(!0),document.querySelector("#chart-location"),y()})),i()}catch(e){console.error("uploadSignal: showUploadTab - "+e)}}},I=new class{constructor(){const e=sessionStorage.getItem("signalCount");this.signalCount=null!==e?e:1}displayDeleteBtn=e=>{try{const t=document.querySelector("#delete-signal");e?(t.classList.add("btn"),t.classList.remove("hide")):(t.classList.remove("btn"),t.classList.add("hide"))}catch(e){console.error("configSignal: displayDeleteBtn - "+e)}};displayAddBtn=e=>{try{const t=document.querySelector("#submit-signal");e?(t.classList.add("btn"),t.classList.remove("hide")):(t.classList.remove("btn"),t.classList.add("hide"))}catch(e){console.error("configSignal: displayAddBtn - "+e)}};displayEditBtn=e=>{try{const t=document.querySelector("#edit-signal");e?(t.classList.add("btn"),t.classList.remove("hide")):(t.classList.remove("btn"),t.classList.add("hide"))}catch(e){console.error("configSignal: displayEditBtn - "+e)}};changeFormTemplate=()=>{try{const e=document.querySelector("#signal-select"),t=document.querySelector("#signal-param-inputs");let n="";switch(e.value){case"sinusoid":n='\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" id="sinusoid-phase" placeholder="0.1" required>\n                        <label for="floatingInput">Phase</label>\n                    </div>\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" id="sinusoid-frequency" placeholder="0.1" required>\n                        <label for="floatingInput">Frequency</label>\n                    </div>\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" id="sinusoid-amplitude" placeholder="0.1" required>\n                        <label for="floatingInput">Amplitude</label>\n                    </div>\n                    ';break;case"chirp":n='\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" id="chirp-frequency" placeholder="0.1" required>\n                        <label for="floatingInput">Intial frequency</label>\n                    </div>\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" id="chirp-rate" placeholder="0.1" required>\n                        <label for="floatingInput">Chirp rate</label>\n                    </div>\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" id="chirp-amplitude" placeholder="0.1" required>\n                        <label for="floatingInput">Amplitude</label>\n                    </div>\n                    ';break;case"trend":n='\n                    <div class="mb-3">\n                        <select\n                            class="form-select"\n                            aria-label="Default select example"\n                            id="trend-trendType"\n                        >\n                            <option selected value=\'none\'>Select trend type</option>\n                            <option value="exponential">Exponential</option>\n                            <option value="linear">Linear</option>\n                            <option value="polynomial">Polynomial</option>\n                      </select>  \n                    </div>\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" placeholder="0.1" id="trend-alpha" required>\n                        <label for="floatingInput">α co-efficient</label>\n                    </div>\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" placeholder="0.1" id="trend-beta" required>\n                        <label for="floatingInput">β co-efficient</label>\n                    </div>\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" placeholder="0.1" id="trend-gamma" required>\n                        <label for="floatingInput">γ co-efficient</label>\n                    </div>\n                    ';break;case"colour-noise":n='\n                    <div class="mb-3">\n                        <select\n                            class="form-select"\n                            aria-label="Default select example"\n                            id="colournoise-colour"\n                        >\n                            <option selected value="none">Select noise colour</option>\n                            <option value="white">White</option>\n                            <option value="brownian">Brownian</option>\n                            <option value="blue">Blue</option>\n                            <option value="violet">Violet</option>\n                            <option value="pink">Pink</option>\n                      </select>  \n                    </div>\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" placeholder="0.1" id="colournoise-seed" required>\n                        <label for="floatingInput">Seed value</label>\n                    </div>\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" placeholder="0.1" id="colournoise-amprollfactor" required>\n                        <label for="floatingInput">Amplitude roll factor</label>\n                    </div>\n                    <div class="form-floating mb-3">\n                        <input type="number" class="form-control" placeholder="0.1" id="colournoise-variance" required>\n                        <label for="floatingInput">Variance</label>\n                    </div>\n                    ';break;case"shot-noise":n='\n                        <div class="form-floating mb-3">\n                            <input type="number" class="form-control" placeholder="0.1" id="shotnoise-seed" required>\n                            <label for="floatingInput">Seed value</label>\n                        </div>\n                        ';break;case"finance-data":break;default:n='\n                    <div class="mb-3 no-signal-selected-msg">\n                        <h4>No signal type selected</h4>\n                    </div>\n                    '}t.innerHTML=n}catch(e){console.error("configSignal: changeFormTemplate - "+e)}};populateSettingsForm=e=>{try{this.displayDeleteBtn(!0),this.displayAddBtn(!1),this.displayEditBtn(!0);let o=JSON.parse(e);const i=document.querySelector("#signal-select"),a=document.querySelector("#delete-signal"),r=document.querySelector("#edit-signal");i.value=o.type,this.changeFormTemplate(o.type);let s=o.type.replace(/-|\s/g,"");for(var n in o)"id"!==n&&"type"!==n&&(document.querySelector(`#${s}-${n}`).value=o[n]);a.addEventListener("click",(()=>{(e=>{const n=new URL(window.location);new URLSearchParams(n.search).forEach(((t,o)=>{o.split("-")[0]===e.toString()&&n.searchParams.delete(o),window.history.pushState({},"",n)}));let o=new URLSearchParams(n);sessionStorage.setItem("settings",JSON.stringify(t(o)))})(o.id),this.signalCount--,sessionStorage.setItem("signalCount",this.signalCount),window.location.reload()})),r.addEventListener("click",(()=>{let e=this.getEditSignalData(this.currentSignal.id,this.getSignalData());((e,t)=>{let n=t;const o=new URL(window.location);Object.keys(n).forEach((function(t,i){o.searchParams.set(`${e}-${t}`,n[t]),window.history.pushState({},"",o)}))})(this.currentSignal.id,e),window.location.reload()}))}catch(e){console.error("configSignal: populateSettingsForm - "+e)}};getEditSignalData=(e,t)=>{try{return t.id=e,t}catch(e){console.error("configSignal: getEditSignalData - "+e)}};addSignalChip=e=>{try{const t=document.querySelector("#no-signal-msg"),n=document.querySelector(".signals"),o=document.querySelector(".signal-hold"),i=document.createElement("button"),a=e.type+e.id;t&&(t.remove(),n.classList.remove("align-text-center"),n.classList.remove("align-items-center"),n.classList.add("justify-content-start")),i.setAttribute("type","button"),i.setAttribute("class","btn btn-outline-light m-1 signal-chip"),i.setAttribute("id",a),i.addEventListener("click",(()=>{this.currentSignal=e,this.populateSettingsForm(JSON.stringify(e))})),i.innerText=e.type+" "+e.id,o.appendChild(i)}catch(e){console.error("configSignal: addSignalChip - "+e)}};getSignalData=()=>{try{const e=document.querySelector("#signal-select").value;let t={id:this.signalCount,type:e};switch(t.type){case"sinusoid":t.phase=document.querySelector("#sinusoid-phase").value,t.frequency=document.querySelector("#sinusoid-frequency").value,t.amplitude=document.querySelector("#sinusoid-amplitude").value;break;case"chirp":t.frequency=document.querySelector("#chirp-frequency").value,t.rate=document.querySelector("#chirp-rate").value,t.amplitude=document.querySelector("#chirp-amplitude").value;break;case"trend":t.trendType=document.querySelector("#trend-trendType").value,t.alpha=document.querySelector("#trend-alpha").value,t.beta=document.querySelector("#trend-beta").value,t.gamma=document.querySelector("#trend-gamma").value;break;case"colour-noise":t.colour=document.querySelector("#colournoise-colour").value,t.seed=document.querySelector("#colournoise-seed").value,t.amprollfactor=document.querySelector("#colournoise-amprollfactor").value,t.variance=document.querySelector("#colournoise-variance").value;break;case"shot-noise":t.seed=document.querySelector("#shotnoise-seed").value}return t}catch(e){console.error("configSignal: addSignalChip - "+e)}};addSignal=e=>{try{this.addSignalChip(e);let n=window.location.search,o=new URLSearchParams(n);sessionStorage.setItem("settings",JSON.stringify(t(o))),this.signalCount++,sessionStorage.setItem("signalCount",this.signalCount)}catch(e){console.error("configSignal: addSignal - "+e)}};showConfigureTab=()=>{try{document.querySelector("#config-btn").classList.add("active"),document.querySelector("#upload-btn").classList.remove("active"),i();const a=document.querySelector(".signal-section"),r='\n          \x3c!--Signal Selection--\x3e\n          <div class="col-md-6 signal-selection">\n            <div class="row signals p-5 align-text-center align-items-center" style="height:350px;">\n              <div class="col-md-12 signal-hold" data-title="View your signals..." data-intro="Your signal will appear here as a button that you can click to view, edit and delete your signal data as you need." data-step="11">\n                  <h2 class="text-center" id="no-signal-msg">No signals configured <br/> <i class="bi bi-file-earmark-excel"></i></h2>\n              </div>\n            </div>\n            <div class="row align-items-end combination-bar p-2">\n              <div class="col-md-6 ">\n                <select\n                  class="form-select"\n                  id="combination-method"\n                  aria-label="Default select example"\n                  data-bs-toggle="tooltip" data-bs-placement="right" \n                  title="Choosing the sum method will limit the signal types possible for combination to sinusoid and trends only"\n                  data-title="Choose your method" data-intro="Once you finish creating your time series components you can select a combination method (either sum or product) which will be used to either add or multiply your signals together." data-step="12"\n                >\n                  <option selected>Select combination method</option>\n                  <option value="1">Sum</option>\n                  <option value="2">Product</option>\n                </select>\n              </div>\n              <div class="col-md-6">\n                <button type="button" id="generate-config-graph" class="btn btn-dark float-end" data-title="Have a look!" data-intro="Finally, click on generate graphs to start the decomposition!" data-step="13">\n                  Generate graphs\n                </button>\n              </div>\n            </div>\n          </div>\n           \x3c!--Signal Config--\x3e\n           <div class="col-md-6 signal-configuration p-4">\n              <h4>Signal Configuration Settings \n                  <a class="text-decoration-none" data-bs-toggle="modal" data-bs-target="#signalInfoModal"><i class="bi bi-info-circle"></i></a>\n                  <a onclick="introJs().goToStepNumber(10).start()"><i class="bi bi-question-circle"></i></a>\n              </h4>\n              <p>Configure your signal by selecting a signal type below and filling in all the parameter fields with your desired values.</p>\n              <form class="form-example g-3" id="signal-form" >\n                  <div class="signal-parameters">\n                      <div class="mb-3">\n                          <select\n                          id="signal-select" \n                          class="form-select"\n                          aria-label="Default select example"\n                          placeholder="Select signal type"\n                          required\n                          data-title="Create your signals..." data-intro="Add signal type by selecting your chosen type here and filling in the form that will appear below." data-step="10"\n                        >\n                          <option value="default" selected="selected">Select signal type</option>\n                          <option value="sinusoid">Sinusoid</option>\n                          <option value="chirp">Chirp</option>\n                          <option value="trend">Trend</option>\n                          <option value="colour-noise">White/Coloured Noise</option>\n                          <option value="shot-noise">Poisson/Shot Noise</option>\n                          <option value="finance-data">Financial Data</option>\n                        </select>  \n                      </div>\n                      <div id="signal-param-inputs">\n                      </div>\n                    </div>\n                    <btn class="btn btn-dark test-btns" id="delete-signal" type="button">\n                      <i class="bi bi-trash text-light"></i>\n                    </btn>\n                    <btn class="btn btn-primary float-end test-btns" id="submit-signal" aria-label="Default select example" data-bs-toggle="popover" data-bs-trigger="click" data-bs-placement="bottom" data-bs-content="You have reached the max signal limit.">\n                      <i class="bi bi-check2 text-light"></i>\n                    </btn>\n                    <btn class="btn btn-primary float-end test-btns" id="edit-signal" type="button">\n                      <i class="bi bi-check2 text-light"></i>\n                    </btn>\n              </form>\n            <div>\n              \n            </div>\n          </div>\n                  ';a.innerHTML=r;const s=document.querySelector("#signal-select");this.displayDeleteBtn(!1),this.displayAddBtn(!1),this.displayEditBtn(!1),s.addEventListener("change",(e=>{document.querySelector("#signal-form"),this.changeFormTemplate(s.value),this.displayDeleteBtn(!1),this.displayAddBtn(!0),this.displayEditBtn(!1),"default"===s.value&&this.displayAddBtn(!1)}));const l=document.querySelector("#submit-signal");var n=new bootstrap.Popover(l);l.addEventListener("click",(o=>{if(o.preventDefault(),this.signalCount<11){const e=this.getSignalData();this.addSignal(e),((e,n)=>{let o=n;const i=new URL(window.location);Object.keys(o).forEach((function(t,n){i.searchParams.set(`${e}-${t}`,o[t]),window.history.pushState({},"",i)}));let a=new URLSearchParams(i.search);sessionStorage.setItem("settings",JSON.stringify(t(a)))})(e.id,e),window.location.reload,n.hide()}const i=document.querySelector("#combination-method");e("combinationMethod","2"===i.value?"product":"sum");let a=window.location.search,r=new URLSearchParams(a);sessionStorage.setItem("settings",JSON.stringify(t(r)))})),document.querySelector("#combination-method").addEventListener("change",(()=>{const n=document.querySelector("#combination-method");e("combinationMethod","2"===n.value?"product":"sum");let o=window.location.search,i=new URLSearchParams(o);sessionStorage.setItem("settings",JSON.stringify(t(i)))})),document.querySelector("#generate-config-graph").addEventListener("click",(()=>{o(!0),y()}))}catch(e){console.error("configSignal: showConfigureTab - "+e)}}};window.addEventListener("DOMContentLoaded",(e=>{let n=window.location.search,i=new URLSearchParams(n);sessionStorage.setItem("settings",JSON.stringify(t(i)));var a=JSON.parse(sessionStorage.getItem("settings"));let r=Object.keys(a);if(o(!1),k.displayInfoPanel(!1),0!==r.length){Object.keys(a).length&&(e=>{try{const e=document.querySelector(".starting-instructions");e.classList.remove("d-flex"),e.classList.add("hide")}catch(e){console.error("reset: displayOpeningMsg - "+e)}})(),"config"===a.dataMethod&&I.showConfigureTab(),a.hasOwnProperty("signals")&&a.signals.forEach(I.addSignalChip),r.forEach(((e,t)=>{"upload"===a.dataMethod&&T.showUploadTab(),"analysisMethod"===e&&(k.displayInfoPanel(!0),k.populatingInfoPanel(a[e]))}));try{const e=document.querySelector("#bookmark-btn");new bootstrap.Popover(e),[].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map((function(e){return new bootstrap.Tooltip(e)}))}catch(e){console.error("main: bootstrap init - "+e)}}else introJs().setOptions({skipLabel:"Skip"}).start()})),v.addEventListener("click",(()=>{e("analysisMethod","EMD");let n=window.location.search,o=new URLSearchParams(n);sessionStorage.setItem("settings",JSON.stringify(t(o)))})),S.addEventListener("click",(()=>{e("analysisMethod","STFT");let n=window.location.search,o=new URLSearchParams(n);sessionStorage.setItem("settings",JSON.stringify(t(o)))})),w.addEventListener("click",(()=>{e("dataMethod","upload"),(()=>{const e=new URL(window.location);new URLSearchParams(e.search).forEach(((t,n)=>{+n.split("-")[0]&&e.searchParams.delete(n),window.history.pushState({},"",e)})),sessionStorage.setItem("signalCount",1)})();let n=window.location.search,o=new URLSearchParams(n);sessionStorage.setItem("settings",JSON.stringify(t(o)))})),q.addEventListener("click",(()=>{e("dataMethod","config");let n=window.location.search,o=new URLSearchParams(n);sessionStorage.setItem("settings",JSON.stringify(t(o)))})),x.addEventListener("click",(()=>{(()=>{try{const e=document.querySelector(".signal-section");document.querySelector("#emd-btn").classList.remove("active-dark"),document.querySelector("#stft-btn").classList.remove("active-dark"),document.querySelector("#config-btn").classList.remove("active"),document.querySelector("#upload-btn").classList.remove("active"),document.querySelector("#reset-btn").classList.add("disabled"),e.innerHTML="",window.history.pushState({},"","/"),o(!1),exports.displayOpeningMsg(!0)}catch(e){console.error("reset: resetSignalSettings - "+e)}})(),sessionStorage.clear();let e=window.location.search,n=new URLSearchParams(e);sessionStorage.setItem("settings",JSON.stringify(t(n)))})),L.addEventListener("click",(()=>{navigator.clipboard.writeText(window.location.href),document.querySelector("#bookmark-btn").classList.remove("bi-bookmark"),document.querySelector("#bookmark-btn").classList.add("bi-bookmark-check")})),window.addEventListener("popstate",(()=>{window.location.reload()}))})()})();