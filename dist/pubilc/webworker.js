"use strict";importScripts("https://cdn.jsdelivr.net/pyodide/v0.19.0/full/pyodide.js");let pyFuncs,pyodideReady=!1;async function setupPyodide(){try{const e=await self.loadPyodide({indexURL:"https://cdn.jsdelivr.net/pyodide/v0.19.0/full/"});await e.loadPackage(["numpy","scipy","micropip"]),await e.runPythonAsync("\n      import micropip\n      await micropip.install('https://files.pythonhosted.org/packages/4c/9b/b3d239463d0e19cc748e183fde3521285e2d6049895bf6fe62703488e093/pyhht-0.1.0-py3-none-any.whl', keep_going=True)\n      await micropip.install('https://files.pythonhosted.org/packages/9e/38/3cba20b12e7e06ec82fa57a9b6cde363903350b6b54754902acf2673c46b/mpld3-0.5.7-py3-none-any.whl', keep_going=True)\n      await micropip.install('emd-0.5.3-py3-none-any.whl', keep_going=True)\n\n    ");const o=await fetch("script.py"),n=await o.text();pyFuncs=e.runPython(n),console.log("Python Ready"),pyodideReady=!0}catch(e){console.error("Python loading failed."),console.error(e)}}const pyodidePromise=setupPyodide();self.onmessage=async function(e){if(await pyodidePromise,console.log(e),!pyodideReady)return void postMessage("pyodide_not_available");const o=pyFuncs.analysis_runner(JSON.stringify(e.data));postMessage(o)};